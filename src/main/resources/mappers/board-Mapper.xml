<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> <!--mapper임을 명시하기 위한 DTD 선언 -->
		
<!-- namespace 항상 고유해야함 -->		
<mapper namespace="com.spring.mapper.BoardMapper">


	<!-- 총게시글의 개수를 반환하는 쿼리 -->
	<select id="countBoard" resultType="int">
		SELECT
				COUNT(*)
		FROM
				BOARD
	</select>
	
	<select id="selectBoard" resultType="com.spring.board.dto.BoardDTO">
		SELECT
				*
		FROM
			BOARD
	</select>

	
	<!-- 게시글 작성 쿼리 -->
	<insert id="insertBoard" parameterType="com.spring.board.dto.BoardDTO">
		INSERT INTO 
					BOARD
		VALUES(
					(SELECT
							IFNULL(MAX(NUM)+1,1) <!-- 만약 넘버가 널이면 1이 나오고 아니면 맥스값에 + 1 더하는것 -->
					FROM
							BOARD AS B),
					#{writer},
					#{email},
					#{subject},
					#{password},
					now(),
					(SELECT
							IFNULL(MAX(REF) + 1, 1) <!-- 만약 REF가 널이면 1이 나오고 아니면 맥스값에 +1 더하는것 -->
					FROM
							BOARD AS B),
					1,
					1,
					0,
					#{content})
				
	</insert>
	
	
	<select id="getSearchBoard" resultType="com.spring.board.dto.BoardDTO">
		<choose>
			<when test="searchKeyword.equals('total')"><!-- 전체 검색일 경우 -->
				<choose>
					<when test="searchWord.equals('')"><!-- 전체 검색중 검색 문자가 없을 경우 -->
						SELECT
								*
						FROM
								BOARD
						ORDER BY
								REF DESC,
								RE_STEP
						LIMIT
								#{startBoardIdx}, #{onePageViewCount}
					</when>
					<otherwise><!-- 전체 검색 중 문자가 있을경우 -->
						SELECT
								*
						FROM
								BOARD
						WHERE
								SUBJECT LIKE CONCAT('%', #{searchWord}, '%') OR
								WRITER  LIKE CONCAT('%', #{searchWord}, '%')
						ORDER BY
								REF DESC,
								RE_STEP
						LIMIT
								#{startBoardIdx}, #{onePageViewCount}
					</otherwise>
				</choose>
			</when>
			<otherwise><!-- 서치 키워드를 이용할 경우 -->
				SELECT
						*
				FROM
						BOARD
				WHERE
						<if test="searchKeyword.equals('writer')">
							WRITER LIKE CONCAT('%', #{searchWord}, '%')
						</if>
						<if test="searchKeyword.equals('subject')">
							SUBJECT LIKE CONCAT('%', #{searchWord}, '%')
						</if>
				ORDER BY
						REF DESC,
						RE_STEP
				LIMIT
						#{startBoardIdx}, #{onePageViewCount}
			</otherwise>
		</choose>
	</select>
	
	<!-- 게시글의 개수를 반환하는 쿼리 -->
	<select id="getAllBoardCount" resultType="int">
		<choose>
			<when test="searchKeyword.equals('total')"> <!-- searchKeyword가 전체검색일 경우 -->
				<choose>
					<when test="searchWord.equals('')"> <!--  특정 키워드가 없을경우 (보통의 경우)  -->
						SELECT 
								COUNT(*) 
						FROM 
								BOARD
					</when>
					<otherwise>	<!-- 특정 키워드가 있을 경우 -->
						SELECT 
								COUNT(*) 
						FROM 
								BOARD
						WHERE
								SUBJECT LIKE CONCAT('%',#{searchWord},'%') OR 
								WRITER LIKE CONCAT('%',#{searchWord},'%')
					</otherwise>
				</choose>
			</when>
			<otherwise>	<!-- searchKeyword가 전체 검색이 아닐 경우 -->
				SELECT 
						COUNT(*) 
				FROM 
						BOARD 
				WHERE
					<if test="searchKeyword.equals('writer')">
						WRITER LIKE CONCAT('%' , #{searchWord} , '%')
					</if>
					<if test="searchKeyword.equals('subject')">
						SUBJECT LIKE CONCAT('%' , #{searchWord} , '%')
					</if>
			</otherwise>
		</choose>	
	</select>
	
	<select id="getOneBoard" parameterType="int" resultType="com.spring.board.dto.BoardDTO">
		SELECT
				*
		FROM
				BOARD
		WHERE
				NUM=#{num}
	</select>
	
	<select id="validateUserCheck"
	 parameterType="com.spring.board.dto.BoardDTO" 
	 resultType="com.spring.board.dto.BoardDTO">
		SELECT
				*
		FROM
				 BOARD
		WHERE
				NUM=#{num}	AND PASSWORD =#{password}
	</select>
	
	<update id="increaseReadCount" parameterType="int">
		UPDATE BOARD SET
				READ_COUNT = READ_COUNT + 1
		WHERE
				NUM=#{num}
	</update>
	
	
	
	<update id="updateBoard" parameterType="com.spring.board.dto.BoardDTO">
		UPDATE BOARD SET
				SUBJECT =#{subject},
				CONTENT =#{content}
		WHERE
				NUM=#{num}
	</update>
	
	
	
	<delete id="deleteBoard" parameterType="int">
		DELETE FROM 
				BOARD
		WHERE
				NUM=#{num}
	</delete>
	
	
	
	<!-- 더미리스트를 만드는 쿼리 -->
	<insert id="makeDummyData">
			INSERT INTO
					BOARD
			
			VALUES
			<foreach collection="list" item="bdto" separator=",">
				(#{bdto.num},
				#{bdto.writer},
				#{bdto.email},
				#{bdto.subject},
				#{bdto.password},
				now(),
				#{bdto.ref}, 
				#{bdto.reStep}, 
				#{bdto.reLevel}, 
				#{bdto.readCount},
				#{bdto.content})
			</foreach>
	</insert>
	
	
	<!-- 중복아이디 체크 -->
	<select id="checkWriter" resultType="int">
		<![CDATA[
		SELECT
				COUNT(*)
		FROM
				BOARD
		WHERE
				WRITER =#{writer}
		]]>
	</select>
	
	
	
	<!-- 스텝올려주는 쿼리 -->
	<update id="updateBoardReplyStep">
		<![CDATA[
				UPDATE
						BOARD
				SET
						RE_STEP = RE_STEP + 1
				WHERE
						REF =#{ref} AND RE_STEP > #{reStep}
		]]>
	</update>
	
	
	<insert id="insertReplyBoard" parameterType="com.spring.board.dto.BoardDTO">
		INSERT INTO
				BOARD
		VALUES(
				(SELECT
						MAX(NUM) + 1
				FROM
						BOARD AS B),
				#{writer},
				#{email},
				#{subject},
				#{password},
				now(),
				#{ref},
				#{reStep} + 1,
				#{reLevel} + 1,
				0,
				#{content})
	</insert>
	
	<!--엑셀리스트 출력하는 쿼리-->
	<select id="selectBoardList" resultType="com.spring.board.dto.BoardDTO" parameterType="java.util.Map">
		SELECT
				NUM,
				WRITER,
				EMAIL,
				SUBJECT,
				REG_DATE,
				CONTENT
		FROM
				BOARD
		ORDER BY
				NUM DESC	
	</select>
	
	
	
	
</mapper>