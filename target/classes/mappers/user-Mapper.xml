<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> <!--mapper임을 명시하기 위한 DTD 선언 -->
		
<!-- namespace 항상 고유해야함 -->		
<mapper namespace="com.spring.mapper.userMapper">

	
	<!-- 회원가입 쿼리 -->
	<insert id="insertUser" parameterType="com.spring.board.dto.UserDTO">
		INSERT INTO 
					USER
		VALUES(
					(SELECT
							IFNULL(MAX(MEMBER_NO)+1,1) <!-- 만약 넘버가 널이면 1이 나오고 아니면 맥스값에 + 1 더하는것 -->
					FROM
							USER AS U),
					#{memberId},
					#{memberPw},
					#{memberName},
					#{memberGender},
					#{memberBirthY},
					#{memberBirthM},
					#{memberBirthD},
					#{tel1},
					#{tel2},
					#{tel3},
					#{hp1},
					#{hp2},
					#{hp3},
					#{email1},
					#{email2},
					#{email3},
					#{emailstsYn},
					#{roadAddress},
					#{jibunAddress},
					#{namujiAddress},
					now(),
					'U',
					'N'
					)
					
				
	</insert>
	
	<!-- 중복아이디 체크 -->
	<select id="checkId" resultType="int">
		<![CDATA[
		SELECT
				COUNT(*)
		FROM
				USER
		WHERE
				MEMBER_ID =#{memberId}
		]]>
	</select>
	
	<!-- 로그인쿼리-->
	
	<select id="login" parameterType="com.spring.board.dto.UserDTO" resultType="com.spring.board.dto.UserDTO">
		<![CDATA[
		SELECT
				*
		FROM
				USER
		WHERE
				MEMBER_ID =#{memberId} AND MEMBER_PW=#{memberPw}
		]]>
	</select>
	
	<!-- <select id="selectUserJoinHistory" resultType="com.spring.board.dto.UserDTO" >
		<choose>
			<when test="search_type.equals('all')"> 전체검색일 경우
				<choose>
					<when test="search_word.equals('')"> 전체검색에서 키워드가 없을경우
						SELECT
								*
						FROM
								USER
						WHERE
								REG_DATE  BETWEEN #{beginDate}  AND #{endDate}
						ORDER BY
								REG_DATE DESC
					</when>
					<otherwise>전체검색 중 문자가 있을경우
						SELECT
								*
						FROM
								USER
						WHERE
								REG_DATE  BETWEEN #{beginDate}  AND #{endDate}
								 AND 
								 MEMBER_NAME LIKE '% ${search_word}%' OR
								 MEMBER_ID LIKE '% ${search_word}%'
						ORDER BY
								REG_DATE DESC
						
					</otherwise>					
				</choose>
			</when>
			<otherwise>서치키워드를 이용할 경우
				SELECT
						*
				FROM
						USER
				WHERE
						<if test="search_type.equals('memberName')">
							MEMBER_NAME LIKE '% ${search_word}%'
						</if>
						<if test="search_type.equals('memberId')">
							MEMBER_ID LIKE '% ${search_word}%'
						</if>
				ORDER BY
								REG_DATE DESC
			</otherwise>
		</choose>
		
	</select>  -->
	
	<select id="selectUserJoinHistory" resultType="com.spring.board.dto.UserDTO" parameterType="java.util.HashMap">
		SELECT
					*
			FROM
					USER
			WHERE
					REG_DATE  BETWEEN #{beginDate} AND #{endDate}
					<if test="search_word == '' and search_type == 'all' " >
						AND MEMBER_NAME LIKE  CONCAT('%', #{search_word}, '%')
						OR MEMBER_ID LIKE CONCAT('%', #{search_word}, '%')
					</if>
					
					<if test="search_word != null and search_type == 'memberName' ">
						AND MEMBER_NAME LIKE CONCAT('%', #{search_word}, '%')
					</if>
					<if test="search_word != null and search_type == 'memberId' ">
						AND MEMBER_ID LIKE CONCAT('%', #{search_word}, '%')
					</if>
			ORDER BY
					REG_DATE DESC
	</select>
	
	<select id="selectOneUser" parameterType="String" resultType="com.spring.board.dto.UserDTO">
		SELECT
				*
		FROM
				USER
		WHERE
				MEMBER_ID =#{memberId}
	</select> 

		<!--엑셀리스트 출력하는 쿼리-->
	<select id="selectUserList" resultType="com.spring.board.dto.UserDTO" parameterType="java.util.Map">
		SELECT
				MEMBER_ID,
				MEMBER_NAME,
				ROAD_ADDRESS,
				JIBUN_ADDRESS,
				NAMUJI_ADDRESS,
				EMAIL1,
				EMAIL2,
				EMAIL3,
				HP1,
				HP2,
				HP3,
				REG_DATE,
				USER_TYPE
				
		FROM
				USER
		ORDER BY
				MEMBER_NO DESC	
	</select>
	
	
	 <update id="uddateMyInfo" parameterType="java.util.HashMap">
	 	UPDATE
	 			USER
	 	<set>
	 		<if test="memberPw != '' and meberPw != null">
	 			MEMBER_PW = #{memberPw},
	 		</if>
	 		<if test="memberBirthY != '' and memberBirthY != null">
			    MEMBER_BIRTH_Y = #{memberBirthY},
			</if>
		    <if test="memberBirthM != '' and memberBirthM != null">
		         MEMBER_BIRTH_M = #{memberBirthM},
		    </if>
		    <if test="memberBirthD != '' and memberBirthD != null">
		    	MEMBER_BIRTH_D = #{memberBirthD},
		    </if>
		    <if test="tel1 != '' and tel1 != null">
		       	TEL1 = #{tel1},
		    </if>
		    <if test="tel2 != '' and tel2 != null">
		        TEL2 = #{tel2},
		    </if>
		    <if test="tel3 != '' and tel3 != null">
		        TEL3 = #{tel3},
		    </if>
		    <if test="hp1 != '' and hp1 != null">
		        HP1 = #{hp1},
		    </if>
		    <if test="hp2 != '' and hp2 != null">
		        HP2 = #{hp2},
		    </if>
		    <if test="hp3 != '' and hp3 != null">
		        HP3 = #{hp3},
	      	</if>
	      	<if test="email1 != '' and email1 != null">
			    EMAIL1 = #{email1},
			</if>
			<if test="email2 != '' and email2 != null">
			    EMAIL2 = #{email2},
			</if>
			<if test="email3 != '' and email3 != null">
			    EMAIL3 = #{email3},
			</if>
			<if test="roadAddress != '' and roadAddress != null">
			         ROADADDRESS = #{roadAddress},
			</if>			     
			<if test="jibunAddress != '' and jibunAddress != null">
			         JIBUNADDRESS = #{jibunAddress},
			</if>
			<if test="namujiAddress != '' and namujiAddress != null">
			         NAMUJIADDRESS = #{namujiAddress},
			</if>
			<if test="delYn != '' and delYn != null">
			         DEL_YN = #{delYn}
			</if>
	 	</set>
	 WHERE
	 		MEMBER_ID = #{memberId}
	 </update>
	
</mapper>